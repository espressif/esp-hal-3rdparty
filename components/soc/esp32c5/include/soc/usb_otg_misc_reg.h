/**
 * SPDX-FileCopyrightText: 2023 Espressif Systems (Shanghai) CO LTD
 *
 *  SPDX-License-Identifier: Apache-2.0
 */
#pragma once

#include <stdint.h>
#include "soc/soc.h"
#ifdef __cplusplus
extern "C" {
#endif

/** USB_OTG_MISC_CLK_EN0_REG register
 *  Reserved
 */
#define USB_OTG_MISC_CLK_EN0_REG (DR_REG_USB_OTG_MISC_BASE + 0x0)
/** USB_OTG_MISC_REG_CLK_EN : R/W; bitpos: [0]; default: 0;
 *  Reserved
 */
#define USB_OTG_MISC_REG_CLK_EN    (BIT(0))
#define USB_OTG_MISC_REG_CLK_EN_M  (USB_OTG_MISC_REG_CLK_EN_V << USB_OTG_MISC_REG_CLK_EN_S)
#define USB_OTG_MISC_REG_CLK_EN_V  0x00000001U
#define USB_OTG_MISC_REG_CLK_EN_S  0

/** USB_OTG_MISC_DATE0_REG register
 *  Reserved
 */
#define USB_OTG_MISC_DATE0_REG (DR_REG_USB_OTG_MISC_BASE + 0x4)
/** USB_OTG_MISC_REG_DATE : R/W; bitpos: [31:0]; default: 23050900;
 *  Reserved
 */
#define USB_OTG_MISC_REG_DATE    0xFFFFFFFFU
#define USB_OTG_MISC_REG_DATE_M  (USB_OTG_MISC_REG_DATE_V << USB_OTG_MISC_REG_DATE_S)
#define USB_OTG_MISC_REG_DATE_V  0xFFFFFFFFU
#define USB_OTG_MISC_REG_DATE_S  0

/** USB_OTG_MISC_CORE_AHB_CTRL0_REG register
 *  USB OTG core AHB bus control.
 */
#define USB_OTG_MISC_CORE_AHB_CTRL0_REG (DR_REG_USB_OTG_MISC_BASE + 0x8)
/** USB_OTG_MISC_REG_CORE_S_HBIGENDIAN : R/W; bitpos: [0]; default: 0;
 *  USB OTG core AHB slave big endian mode. 1'b0: Little, 1'b1: Big.
 */
#define USB_OTG_MISC_REG_CORE_S_HBIGENDIAN    (BIT(0))
#define USB_OTG_MISC_REG_CORE_S_HBIGENDIAN_M  (USB_OTG_MISC_REG_CORE_S_HBIGENDIAN_V << USB_OTG_MISC_REG_CORE_S_HBIGENDIAN_S)
#define USB_OTG_MISC_REG_CORE_S_HBIGENDIAN_V  0x00000001U
#define USB_OTG_MISC_REG_CORE_S_HBIGENDIAN_S  0
/** USB_OTG_MISC_REG_CORE_M_HBIGENDIAN : R/W; bitpos: [1]; default: 0;
 *  USB OTG core AHB master big endian mode. 1'b0: Little, 1'b1: Big.
 */
#define USB_OTG_MISC_REG_CORE_M_HBIGENDIAN    (BIT(1))
#define USB_OTG_MISC_REG_CORE_M_HBIGENDIAN_M  (USB_OTG_MISC_REG_CORE_M_HBIGENDIAN_V << USB_OTG_MISC_REG_CORE_M_HBIGENDIAN_S)
#define USB_OTG_MISC_REG_CORE_M_HBIGENDIAN_V  0x00000001U
#define USB_OTG_MISC_REG_CORE_M_HBIGENDIAN_S  1

/** USB_OTG_MISC_DFIFO_CTRL0_REG register
 *  dfifo control.
 */
#define USB_OTG_MISC_DFIFO_CTRL0_REG (DR_REG_USB_OTG_MISC_BASE + 0xc)
/** USB_OTG_MISC_REG_DFIFO_HCLK_FORCE_ON : R/W; bitpos: [0]; default: 0;
 *  enable dfifo hclk always on.
 */
#define USB_OTG_MISC_REG_DFIFO_HCLK_FORCE_ON    (BIT(0))
#define USB_OTG_MISC_REG_DFIFO_HCLK_FORCE_ON_M  (USB_OTG_MISC_REG_DFIFO_HCLK_FORCE_ON_V << USB_OTG_MISC_REG_DFIFO_HCLK_FORCE_ON_S)
#define USB_OTG_MISC_REG_DFIFO_HCLK_FORCE_ON_V  0x00000001U
#define USB_OTG_MISC_REG_DFIFO_HCLK_FORCE_ON_S  0

/** USB_OTG_MISC_CORE_SS_CTRL0_REG register
 *  USB OTG core simulation scale control.
 */
#define USB_OTG_MISC_CORE_SS_CTRL0_REG (DR_REG_USB_OTG_MISC_BASE + 0x10)
/** USB_OTG_MISC_REG_SS_SCALEDOWN_MODE : R/W; bitpos: [1:0]; default: 0;
 *  USB OTG 2.0 Core Simulation Scale Down Mode, Scale-down timing values, resulting in
 *  <faster> simulations.
 */
#define USB_OTG_MISC_REG_SS_SCALEDOWN_MODE    0x00000003U
#define USB_OTG_MISC_REG_SS_SCALEDOWN_MODE_M  (USB_OTG_MISC_REG_SS_SCALEDOWN_MODE_V << USB_OTG_MISC_REG_SS_SCALEDOWN_MODE_S)
#define USB_OTG_MISC_REG_SS_SCALEDOWN_MODE_V  0x00000003U
#define USB_OTG_MISC_REG_SS_SCALEDOWN_MODE_S  0

/** USB_OTG_MISC_PHY_CTRL0_REG register
 *  USB PHY auxiliary control.
 */
#define USB_OTG_MISC_PHY_CTRL0_REG (DR_REG_USB_OTG_MISC_BASE + 0x14)
/** USB_OTG_MISC_REG_PHY_PLL_EN_OVERRIDE : R/W; bitpos: [0]; default: 0;
 *  Use software to override phy_pll_en.
 */
#define USB_OTG_MISC_REG_PHY_PLL_EN_OVERRIDE    (BIT(0))
#define USB_OTG_MISC_REG_PHY_PLL_EN_OVERRIDE_M  (USB_OTG_MISC_REG_PHY_PLL_EN_OVERRIDE_V << USB_OTG_MISC_REG_PHY_PLL_EN_OVERRIDE_S)
#define USB_OTG_MISC_REG_PHY_PLL_EN_OVERRIDE_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_PLL_EN_OVERRIDE_S  0
/** USB_OTG_MISC_REG_PHY_PLL_EN : R/W; bitpos: [1]; default: 0;
 *  Software phy_pll_en.
 */
#define USB_OTG_MISC_REG_PHY_PLL_EN    (BIT(1))
#define USB_OTG_MISC_REG_PHY_PLL_EN_M  (USB_OTG_MISC_REG_PHY_PLL_EN_V << USB_OTG_MISC_REG_PHY_PLL_EN_S)
#define USB_OTG_MISC_REG_PHY_PLL_EN_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_PLL_EN_S  1
/** USB_OTG_MISC_REG_PHY_SUSPENDM_OVERRIDE : R/W; bitpos: [2]; default: 0;
 *  Use software to override phy_suspendm.
 */
#define USB_OTG_MISC_REG_PHY_SUSPENDM_OVERRIDE    (BIT(2))
#define USB_OTG_MISC_REG_PHY_SUSPENDM_OVERRIDE_M  (USB_OTG_MISC_REG_PHY_SUSPENDM_OVERRIDE_V << USB_OTG_MISC_REG_PHY_SUSPENDM_OVERRIDE_S)
#define USB_OTG_MISC_REG_PHY_SUSPENDM_OVERRIDE_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_SUSPENDM_OVERRIDE_S  2
/** USB_OTG_MISC_REG_PHY_SUSPENDM : R/W; bitpos: [3]; default: 0;
 *  Software phy_suspendm.
 */
#define USB_OTG_MISC_REG_PHY_SUSPENDM    (BIT(3))
#define USB_OTG_MISC_REG_PHY_SUSPENDM_M  (USB_OTG_MISC_REG_PHY_SUSPENDM_V << USB_OTG_MISC_REG_PHY_SUSPENDM_S)
#define USB_OTG_MISC_REG_PHY_SUSPENDM_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_SUSPENDM_S  3
/** USB_OTG_MISC_REG_PHY_RESET_N_OVERRIDE : R/W; bitpos: [4]; default: 0;
 *  Use software to override phy_reset_n.
 */
#define USB_OTG_MISC_REG_PHY_RESET_N_OVERRIDE    (BIT(4))
#define USB_OTG_MISC_REG_PHY_RESET_N_OVERRIDE_M  (USB_OTG_MISC_REG_PHY_RESET_N_OVERRIDE_V << USB_OTG_MISC_REG_PHY_RESET_N_OVERRIDE_S)
#define USB_OTG_MISC_REG_PHY_RESET_N_OVERRIDE_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_RESET_N_OVERRIDE_S  4
/** USB_OTG_MISC_REG_PHY_RESET_N : R/W; bitpos: [5]; default: 0;
 *  Software phy_reset_n.
 */
#define USB_OTG_MISC_REG_PHY_RESET_N    (BIT(5))
#define USB_OTG_MISC_REG_PHY_RESET_N_M  (USB_OTG_MISC_REG_PHY_RESET_N_V << USB_OTG_MISC_REG_PHY_RESET_N_S)
#define USB_OTG_MISC_REG_PHY_RESET_N_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_RESET_N_S  5
/** USB_OTG_MISC_REG_PHY_BIST_OK : RO; bitpos: [6]; default: 0;
 *  USB PHY self test done.
 */
#define USB_OTG_MISC_REG_PHY_BIST_OK    (BIT(6))
#define USB_OTG_MISC_REG_PHY_BIST_OK_M  (USB_OTG_MISC_REG_PHY_BIST_OK_V << USB_OTG_MISC_REG_PHY_BIST_OK_S)
#define USB_OTG_MISC_REG_PHY_BIST_OK_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_BIST_OK_S  6
/** USB_OTG_MISC_REG_PHY_OTG_SUSPENDM : R/W; bitpos: [7]; default: 0;
 *  USB PHY otg_suspendm.
 */
#define USB_OTG_MISC_REG_PHY_OTG_SUSPENDM    (BIT(7))
#define USB_OTG_MISC_REG_PHY_OTG_SUSPENDM_M  (USB_OTG_MISC_REG_PHY_OTG_SUSPENDM_V << USB_OTG_MISC_REG_PHY_OTG_SUSPENDM_S)
#define USB_OTG_MISC_REG_PHY_OTG_SUSPENDM_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_OTG_SUSPENDM_S  7
/** USB_OTG_MISC_REG_PHY_REFCLK_MODE : R/W; bitpos: [8]; default: 1;
 *  Select USB PHY refclk mode. 0: refclk is 25MHz, 1: refclk is 12MHz.
 */
#define USB_OTG_MISC_REG_PHY_REFCLK_MODE    (BIT(8))
#define USB_OTG_MISC_REG_PHY_REFCLK_MODE_M  (USB_OTG_MISC_REG_PHY_REFCLK_MODE_V << USB_OTG_MISC_REG_PHY_REFCLK_MODE_S)
#define USB_OTG_MISC_REG_PHY_REFCLK_MODE_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_REFCLK_MODE_S  8
/** USB_OTG_MISC_REG_PHY_SELF_TEST : R/W; bitpos: [9]; default: 0;
 *  USB PHY self test enable.
 */
#define USB_OTG_MISC_REG_PHY_SELF_TEST    (BIT(9))
#define USB_OTG_MISC_REG_PHY_SELF_TEST_M  (USB_OTG_MISC_REG_PHY_SELF_TEST_V << USB_OTG_MISC_REG_PHY_SELF_TEST_S)
#define USB_OTG_MISC_REG_PHY_SELF_TEST_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_SELF_TEST_S  9
/** USB_OTG_MISC_REG_PHY_TXBITSTUFF_ENABLE : R/W; bitpos: [10]; default: 0;
 *  USB PHY tx bitstuff enable.
 */
#define USB_OTG_MISC_REG_PHY_TXBITSTUFF_ENABLE    (BIT(10))
#define USB_OTG_MISC_REG_PHY_TXBITSTUFF_ENABLE_M  (USB_OTG_MISC_REG_PHY_TXBITSTUFF_ENABLE_V << USB_OTG_MISC_REG_PHY_TXBITSTUFF_ENABLE_S)
#define USB_OTG_MISC_REG_PHY_TXBITSTUFF_ENABLE_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_TXBITSTUFF_ENABLE_S  10

/** USB_OTG_MISC_PHY_DBG_PROBE0_REG register
 *  USB PHY debug probe register.
 */
#define USB_OTG_MISC_PHY_DBG_PROBE0_REG (DR_REG_USB_OTG_MISC_BASE + 0x18)
/** USB_OTG_MISC_REG_PHY_DBG_LINE_STATE : RO; bitpos: [1:0]; default: 0;
 *  Reserved.
 */
#define USB_OTG_MISC_REG_PHY_DBG_LINE_STATE    0x00000003U
#define USB_OTG_MISC_REG_PHY_DBG_LINE_STATE_M  (USB_OTG_MISC_REG_PHY_DBG_LINE_STATE_V << USB_OTG_MISC_REG_PHY_DBG_LINE_STATE_S)
#define USB_OTG_MISC_REG_PHY_DBG_LINE_STATE_V  0x00000003U
#define USB_OTG_MISC_REG_PHY_DBG_LINE_STATE_S  0
/** USB_OTG_MISC_REG_PHY_DBG_RX_VALID : RO; bitpos: [2]; default: 0;
 *  Reserved.
 */
#define USB_OTG_MISC_REG_PHY_DBG_RX_VALID    (BIT(2))
#define USB_OTG_MISC_REG_PHY_DBG_RX_VALID_M  (USB_OTG_MISC_REG_PHY_DBG_RX_VALID_V << USB_OTG_MISC_REG_PHY_DBG_RX_VALID_S)
#define USB_OTG_MISC_REG_PHY_DBG_RX_VALID_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_DBG_RX_VALID_S  2
/** USB_OTG_MISC_REG_PHY_DBG_RX_VALIDH : RO; bitpos: [3]; default: 0;
 *  Reserved.
 */
#define USB_OTG_MISC_REG_PHY_DBG_RX_VALIDH    (BIT(3))
#define USB_OTG_MISC_REG_PHY_DBG_RX_VALIDH_M  (USB_OTG_MISC_REG_PHY_DBG_RX_VALIDH_V << USB_OTG_MISC_REG_PHY_DBG_RX_VALIDH_S)
#define USB_OTG_MISC_REG_PHY_DBG_RX_VALIDH_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_DBG_RX_VALIDH_S  3
/** USB_OTG_MISC_REG_PHY_DBG_RX_ACTIVE : RO; bitpos: [4]; default: 0;
 *  Reserved.
 */
#define USB_OTG_MISC_REG_PHY_DBG_RX_ACTIVE    (BIT(4))
#define USB_OTG_MISC_REG_PHY_DBG_RX_ACTIVE_M  (USB_OTG_MISC_REG_PHY_DBG_RX_ACTIVE_V << USB_OTG_MISC_REG_PHY_DBG_RX_ACTIVE_S)
#define USB_OTG_MISC_REG_PHY_DBG_RX_ACTIVE_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_DBG_RX_ACTIVE_S  4
/** USB_OTG_MISC_REG_PHY_DBG_RX_ERROR : RO; bitpos: [5]; default: 0;
 *  Reserved.
 */
#define USB_OTG_MISC_REG_PHY_DBG_RX_ERROR    (BIT(5))
#define USB_OTG_MISC_REG_PHY_DBG_RX_ERROR_M  (USB_OTG_MISC_REG_PHY_DBG_RX_ERROR_V << USB_OTG_MISC_REG_PHY_DBG_RX_ERROR_S)
#define USB_OTG_MISC_REG_PHY_DBG_RX_ERROR_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_DBG_RX_ERROR_S  5
/** USB_OTG_MISC_REG_PHY_DBG_TX_READY : RO; bitpos: [6]; default: 0;
 *  Reserved.
 */
#define USB_OTG_MISC_REG_PHY_DBG_TX_READY    (BIT(6))
#define USB_OTG_MISC_REG_PHY_DBG_TX_READY_M  (USB_OTG_MISC_REG_PHY_DBG_TX_READY_V << USB_OTG_MISC_REG_PHY_DBG_TX_READY_S)
#define USB_OTG_MISC_REG_PHY_DBG_TX_READY_V  0x00000001U
#define USB_OTG_MISC_REG_PHY_DBG_TX_READY_S  6

/** USB_OTG_MISC_PHY_INT_RAW_REG register
 *  Interrupt raw of USB PHY interrupt register.
 */
#define USB_OTG_MISC_PHY_INT_RAW_REG (DR_REG_USB_OTG_MISC_BASE + 0x1c)
/** USB_OTG_MISC_REG_IDDIG_INT_RAW : R/SS/WTC; bitpos: [0]; default: 0;
 *  Interrupt raw of reg_iddig_int_st
 */
#define USB_OTG_MISC_REG_IDDIG_INT_RAW    (BIT(0))
#define USB_OTG_MISC_REG_IDDIG_INT_RAW_M  (USB_OTG_MISC_REG_IDDIG_INT_RAW_V << USB_OTG_MISC_REG_IDDIG_INT_RAW_S)
#define USB_OTG_MISC_REG_IDDIG_INT_RAW_V  0x00000001U
#define USB_OTG_MISC_REG_IDDIG_INT_RAW_S  0
/** USB_OTG_MISC_REG_VBUS_VALID_INT_RAW : R/SS/WTC; bitpos: [1]; default: 0;
 *  Interrupt raw of reg_vbus_valid_int_st
 */
#define USB_OTG_MISC_REG_VBUS_VALID_INT_RAW    (BIT(1))
#define USB_OTG_MISC_REG_VBUS_VALID_INT_RAW_M  (USB_OTG_MISC_REG_VBUS_VALID_INT_RAW_V << USB_OTG_MISC_REG_VBUS_VALID_INT_RAW_S)
#define USB_OTG_MISC_REG_VBUS_VALID_INT_RAW_V  0x00000001U
#define USB_OTG_MISC_REG_VBUS_VALID_INT_RAW_S  1
/** USB_OTG_MISC_REG_SESSVALID_INT_RAW : R/SS/WTC; bitpos: [2]; default: 0;
 *  Interrupt raw of reg_sessvalid_int_st
 */
#define USB_OTG_MISC_REG_SESSVALID_INT_RAW    (BIT(2))
#define USB_OTG_MISC_REG_SESSVALID_INT_RAW_M  (USB_OTG_MISC_REG_SESSVALID_INT_RAW_V << USB_OTG_MISC_REG_SESSVALID_INT_RAW_S)
#define USB_OTG_MISC_REG_SESSVALID_INT_RAW_V  0x00000001U
#define USB_OTG_MISC_REG_SESSVALID_INT_RAW_S  2
/** USB_OTG_MISC_REG_SESSEND_INT_RAW : R/SS/WTC; bitpos: [3]; default: 0;
 *  Interrupt raw of reg_sessend_int_st
 */
#define USB_OTG_MISC_REG_SESSEND_INT_RAW    (BIT(3))
#define USB_OTG_MISC_REG_SESSEND_INT_RAW_M  (USB_OTG_MISC_REG_SESSEND_INT_RAW_V << USB_OTG_MISC_REG_SESSEND_INT_RAW_S)
#define USB_OTG_MISC_REG_SESSEND_INT_RAW_V  0x00000001U
#define USB_OTG_MISC_REG_SESSEND_INT_RAW_S  3
/** USB_OTG_MISC_REG_BVALID_INT_RAW : R/SS/WTC; bitpos: [4]; default: 0;
 *  Interrupt raw of reg_bvalid_int_st
 */
#define USB_OTG_MISC_REG_BVALID_INT_RAW    (BIT(4))
#define USB_OTG_MISC_REG_BVALID_INT_RAW_M  (USB_OTG_MISC_REG_BVALID_INT_RAW_V << USB_OTG_MISC_REG_BVALID_INT_RAW_S)
#define USB_OTG_MISC_REG_BVALID_INT_RAW_V  0x00000001U
#define USB_OTG_MISC_REG_BVALID_INT_RAW_S  4
/** USB_OTG_MISC_REG_HOST_DISCONNECT_INT_RAW : R/SS/WTC; bitpos: [5]; default: 0;
 *  Interrupt raw of reg_host_disconnect_int_st
 */
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_RAW    (BIT(5))
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_RAW_M  (USB_OTG_MISC_REG_HOST_DISCONNECT_INT_RAW_V << USB_OTG_MISC_REG_HOST_DISCONNECT_INT_RAW_S)
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_RAW_V  0x00000001U
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_RAW_S  5

/** USB_OTG_MISC_PHY_INT_CLR_REG register
 *  Interrupt clear of USB PHY interrupt register.
 */
#define USB_OTG_MISC_PHY_INT_CLR_REG (DR_REG_USB_OTG_MISC_BASE + 0x20)
/** USB_OTG_MISC_REG_IDDIG_INT_CLR : WT; bitpos: [0]; default: 0;
 *  Interrupt clear of reg_iddig_int_st
 */
#define USB_OTG_MISC_REG_IDDIG_INT_CLR    (BIT(0))
#define USB_OTG_MISC_REG_IDDIG_INT_CLR_M  (USB_OTG_MISC_REG_IDDIG_INT_CLR_V << USB_OTG_MISC_REG_IDDIG_INT_CLR_S)
#define USB_OTG_MISC_REG_IDDIG_INT_CLR_V  0x00000001U
#define USB_OTG_MISC_REG_IDDIG_INT_CLR_S  0
/** USB_OTG_MISC_REG_VBUS_VALID_INT_CLR : WT; bitpos: [1]; default: 0;
 *  Interrupt clear of reg_vbus_valid_int_st
 */
#define USB_OTG_MISC_REG_VBUS_VALID_INT_CLR    (BIT(1))
#define USB_OTG_MISC_REG_VBUS_VALID_INT_CLR_M  (USB_OTG_MISC_REG_VBUS_VALID_INT_CLR_V << USB_OTG_MISC_REG_VBUS_VALID_INT_CLR_S)
#define USB_OTG_MISC_REG_VBUS_VALID_INT_CLR_V  0x00000001U
#define USB_OTG_MISC_REG_VBUS_VALID_INT_CLR_S  1
/** USB_OTG_MISC_REG_SESSVALID_INT_CLR : WT; bitpos: [2]; default: 0;
 *  Interrupt clear of reg_sessvalid_int_st
 */
#define USB_OTG_MISC_REG_SESSVALID_INT_CLR    (BIT(2))
#define USB_OTG_MISC_REG_SESSVALID_INT_CLR_M  (USB_OTG_MISC_REG_SESSVALID_INT_CLR_V << USB_OTG_MISC_REG_SESSVALID_INT_CLR_S)
#define USB_OTG_MISC_REG_SESSVALID_INT_CLR_V  0x00000001U
#define USB_OTG_MISC_REG_SESSVALID_INT_CLR_S  2
/** USB_OTG_MISC_REG_SESSEND_INT_CLR : WT; bitpos: [3]; default: 0;
 *  Interrupt clear of reg_sessend_int_st
 */
#define USB_OTG_MISC_REG_SESSEND_INT_CLR    (BIT(3))
#define USB_OTG_MISC_REG_SESSEND_INT_CLR_M  (USB_OTG_MISC_REG_SESSEND_INT_CLR_V << USB_OTG_MISC_REG_SESSEND_INT_CLR_S)
#define USB_OTG_MISC_REG_SESSEND_INT_CLR_V  0x00000001U
#define USB_OTG_MISC_REG_SESSEND_INT_CLR_S  3
/** USB_OTG_MISC_REG_BVALID_INT_CLR : WT; bitpos: [4]; default: 0;
 *  Interrupt clear of reg_bvalid_int_st
 */
#define USB_OTG_MISC_REG_BVALID_INT_CLR    (BIT(4))
#define USB_OTG_MISC_REG_BVALID_INT_CLR_M  (USB_OTG_MISC_REG_BVALID_INT_CLR_V << USB_OTG_MISC_REG_BVALID_INT_CLR_S)
#define USB_OTG_MISC_REG_BVALID_INT_CLR_V  0x00000001U
#define USB_OTG_MISC_REG_BVALID_INT_CLR_S  4
/** USB_OTG_MISC_REG_HOST_DISCONNECT_INT_CLR : WT; bitpos: [5]; default: 0;
 *  Interrupt clear of reg_host_disconnect_int_st
 */
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_CLR    (BIT(5))
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_CLR_M  (USB_OTG_MISC_REG_HOST_DISCONNECT_INT_CLR_V << USB_OTG_MISC_REG_HOST_DISCONNECT_INT_CLR_S)
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_CLR_V  0x00000001U
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_CLR_S  5

/** USB_OTG_MISC_PHY_INT_ENA_REG register
 *  Interrupt enable of USB PHY interrupt register.
 */
#define USB_OTG_MISC_PHY_INT_ENA_REG (DR_REG_USB_OTG_MISC_BASE + 0x24)
/** USB_OTG_MISC_REG_IDDIG_INT_ENA : R/W; bitpos: [0]; default: 0;
 *  Interrupt enable of reg_iddig_int_st
 */
#define USB_OTG_MISC_REG_IDDIG_INT_ENA    (BIT(0))
#define USB_OTG_MISC_REG_IDDIG_INT_ENA_M  (USB_OTG_MISC_REG_IDDIG_INT_ENA_V << USB_OTG_MISC_REG_IDDIG_INT_ENA_S)
#define USB_OTG_MISC_REG_IDDIG_INT_ENA_V  0x00000001U
#define USB_OTG_MISC_REG_IDDIG_INT_ENA_S  0
/** USB_OTG_MISC_REG_VBUS_VALID_INT_ENA : R/W; bitpos: [1]; default: 0;
 *  Interrupt enable of reg_vbus_valid_int_st
 */
#define USB_OTG_MISC_REG_VBUS_VALID_INT_ENA    (BIT(1))
#define USB_OTG_MISC_REG_VBUS_VALID_INT_ENA_M  (USB_OTG_MISC_REG_VBUS_VALID_INT_ENA_V << USB_OTG_MISC_REG_VBUS_VALID_INT_ENA_S)
#define USB_OTG_MISC_REG_VBUS_VALID_INT_ENA_V  0x00000001U
#define USB_OTG_MISC_REG_VBUS_VALID_INT_ENA_S  1
/** USB_OTG_MISC_REG_SESSVALID_INT_ENA : R/W; bitpos: [2]; default: 0;
 *  Interrupt enable of reg_sessvalid_int_st
 */
#define USB_OTG_MISC_REG_SESSVALID_INT_ENA    (BIT(2))
#define USB_OTG_MISC_REG_SESSVALID_INT_ENA_M  (USB_OTG_MISC_REG_SESSVALID_INT_ENA_V << USB_OTG_MISC_REG_SESSVALID_INT_ENA_S)
#define USB_OTG_MISC_REG_SESSVALID_INT_ENA_V  0x00000001U
#define USB_OTG_MISC_REG_SESSVALID_INT_ENA_S  2
/** USB_OTG_MISC_REG_SESSEND_INT_ENA : R/W; bitpos: [3]; default: 0;
 *  Interrupt enable of reg_sessend_int_st
 */
#define USB_OTG_MISC_REG_SESSEND_INT_ENA    (BIT(3))
#define USB_OTG_MISC_REG_SESSEND_INT_ENA_M  (USB_OTG_MISC_REG_SESSEND_INT_ENA_V << USB_OTG_MISC_REG_SESSEND_INT_ENA_S)
#define USB_OTG_MISC_REG_SESSEND_INT_ENA_V  0x00000001U
#define USB_OTG_MISC_REG_SESSEND_INT_ENA_S  3
/** USB_OTG_MISC_REG_BVALID_INT_ENA : R/W; bitpos: [4]; default: 0;
 *  Interrupt enable of reg_bvalid_int_st
 */
#define USB_OTG_MISC_REG_BVALID_INT_ENA    (BIT(4))
#define USB_OTG_MISC_REG_BVALID_INT_ENA_M  (USB_OTG_MISC_REG_BVALID_INT_ENA_V << USB_OTG_MISC_REG_BVALID_INT_ENA_S)
#define USB_OTG_MISC_REG_BVALID_INT_ENA_V  0x00000001U
#define USB_OTG_MISC_REG_BVALID_INT_ENA_S  4
/** USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ENA : R/W; bitpos: [5]; default: 0;
 *  Interrupt enable of reg_host_disconnect_int_st
 */
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ENA    (BIT(5))
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ENA_M  (USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ENA_V << USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ENA_S)
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ENA_V  0x00000001U
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ENA_S  5

/** USB_OTG_MISC_PHY_INT_ST_REG register
 *  USB PHY interrupt register.
 */
#define USB_OTG_MISC_PHY_INT_ST_REG (DR_REG_USB_OTG_MISC_BASE + 0x28)
/** USB_OTG_MISC_REG_IDDIG_INT_ST : RO; bitpos: [0]; default: 0;
 *  indicates connected plug is a mini-A or mini-B.
 */
#define USB_OTG_MISC_REG_IDDIG_INT_ST    (BIT(0))
#define USB_OTG_MISC_REG_IDDIG_INT_ST_M  (USB_OTG_MISC_REG_IDDIG_INT_ST_V << USB_OTG_MISC_REG_IDDIG_INT_ST_S)
#define USB_OTG_MISC_REG_IDDIG_INT_ST_V  0x00000001U
#define USB_OTG_MISC_REG_IDDIG_INT_ST_S  0
/** USB_OTG_MISC_REG_VBUS_VALID_INT_ST : RO; bitpos: [1]; default: 0;
 *  indicates if the voltage on VBUS is at a valid level for operation, 0: VBUS < 4.4V,
 *  1: VBUS > 4.75V.
 */
#define USB_OTG_MISC_REG_VBUS_VALID_INT_ST    (BIT(1))
#define USB_OTG_MISC_REG_VBUS_VALID_INT_ST_M  (USB_OTG_MISC_REG_VBUS_VALID_INT_ST_V << USB_OTG_MISC_REG_VBUS_VALID_INT_ST_S)
#define USB_OTG_MISC_REG_VBUS_VALID_INT_ST_V  0x00000001U
#define USB_OTG_MISC_REG_VBUS_VALID_INT_ST_S  1
/** USB_OTG_MISC_REG_SESSVALID_INT_ST : RO; bitpos: [2]; default: 0;
 *  indicates if the session for an peripheral is valid, 0: VBUS < 0.8V, 1: VBUS > 2.0V.
 */
#define USB_OTG_MISC_REG_SESSVALID_INT_ST    (BIT(2))
#define USB_OTG_MISC_REG_SESSVALID_INT_ST_M  (USB_OTG_MISC_REG_SESSVALID_INT_ST_V << USB_OTG_MISC_REG_SESSVALID_INT_ST_S)
#define USB_OTG_MISC_REG_SESSVALID_INT_ST_V  0x00000001U
#define USB_OTG_MISC_REG_SESSVALID_INT_ST_S  2
/** USB_OTG_MISC_REG_SESSEND_INT_ST : RO; bitpos: [3]; default: 0;
 *  indicates the voltage on VBUS, 1: VBUS < 0.2V, 0: VBUS > 0.8V.
 */
#define USB_OTG_MISC_REG_SESSEND_INT_ST    (BIT(3))
#define USB_OTG_MISC_REG_SESSEND_INT_ST_M  (USB_OTG_MISC_REG_SESSEND_INT_ST_V << USB_OTG_MISC_REG_SESSEND_INT_ST_S)
#define USB_OTG_MISC_REG_SESSEND_INT_ST_V  0x00000001U
#define USB_OTG_MISC_REG_SESSEND_INT_ST_S  3
/** USB_OTG_MISC_REG_BVALID_INT_ST : RO; bitpos: [4]; default: 0;
 *  indicates the voltage on VBUS, 0: VBUS < 0.8V, 1: VBUS > 4.0V.
 */
#define USB_OTG_MISC_REG_BVALID_INT_ST    (BIT(4))
#define USB_OTG_MISC_REG_BVALID_INT_ST_M  (USB_OTG_MISC_REG_BVALID_INT_ST_V << USB_OTG_MISC_REG_BVALID_INT_ST_S)
#define USB_OTG_MISC_REG_BVALID_INT_ST_V  0x00000001U
#define USB_OTG_MISC_REG_BVALID_INT_ST_S  4
/** USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ST : RO; bitpos: [5]; default: 0;
 *  host disconnect.
 */
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ST    (BIT(5))
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ST_M  (USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ST_V << USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ST_S)
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ST_V  0x00000001U
#define USB_OTG_MISC_REG_HOST_DISCONNECT_INT_ST_S  5

/** USB_OTG_MISC_WAKEUP_CTRL0_REG register
 *  USB wakeup control.
 */
#define USB_OTG_MISC_WAKEUP_CTRL0_REG (DR_REG_USB_OTG_MISC_BASE + 0x2c)
/** USB_OTG_MISC_REG_USB_IN_SUSPEND : R/W; bitpos: [0]; default: 0;
 *  indicate usb is in suspend state
 */
#define USB_OTG_MISC_REG_USB_IN_SUSPEND    (BIT(0))
#define USB_OTG_MISC_REG_USB_IN_SUSPEND_M  (USB_OTG_MISC_REG_USB_IN_SUSPEND_V << USB_OTG_MISC_REG_USB_IN_SUSPEND_S)
#define USB_OTG_MISC_REG_USB_IN_SUSPEND_V  0x00000001U
#define USB_OTG_MISC_REG_USB_IN_SUSPEND_S  0
/** USB_OTG_MISC_REG_USB_WKUP_CLR : WT; bitpos: [1]; default: 0;
 *  clear usb wakeup signals.
 */
#define USB_OTG_MISC_REG_USB_WKUP_CLR    (BIT(1))
#define USB_OTG_MISC_REG_USB_WKUP_CLR_M  (USB_OTG_MISC_REG_USB_WKUP_CLR_V << USB_OTG_MISC_REG_USB_WKUP_CLR_S)
#define USB_OTG_MISC_REG_USB_WKUP_CLR_V  0x00000001U
#define USB_OTG_MISC_REG_USB_WKUP_CLR_S  1

#ifdef __cplusplus
}
#endif
